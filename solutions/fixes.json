[[["            if(max(c,d)>max(a,b)&& min(c,d)>min(a,b)&& max(a,b)>min(c,d))\n"], ["            if(max(c,d)>max(a,b)&& min(c,d)>min(a,b))\n"]]]
[[["map<int,string> f={{0,\"S\"},{1,\"M\"},{2,\"L\"},{3,\"XL\"},{4,\"XXL\"}};\n"], ["map<int,string> f={{0,\"S\"},{1,\"M\"},{2,\"L\"},{3,\"XL\"},{4,\"XLL\"}};\n"]]]
[[["            j*=i;   \n"], ["            j*=j;   \n"]]]
[[["const int N = 100005;\n"], ["const int N = 10005;\n"]]]
[[["\t\tc=a[i].second+1;\n"], []]]
[[["\t\tfor (int j=i+1;j<n;j++)\n"], ["\t\tfor (int j=i;j<n;j++)\n"]]]
[[["\twhile((a>0)&&(b>0)&&(a*b>1)){\n"], ["\twhile((a>0)&&(b>0)){\n"]]]
[[["\t\t\tif (lastp1 && lastp2) f[a][b]=min(f[a][b],f[lastp1-1][lastp2-1]+(a-lastp1-1)*td+(b-lastp2-1)*ti+te);\n"], ["\t\t\tif (lastp1 && lastp2) f[a][b]=min(f[a][b],f[a-1][b-1]+(a-lastp1-1)*td+(b-lastp2-1)*ti+te);\n"]]]
[[["        cout << x+1;\n"], ["        cout << x;\n"]]]
[[["            printf(\"%d %d\\n\",i+1,cnt[ara[i]]);\n"], ["            printf(\"%d %d\\n\",i,cnt[ara[i]]);\n"]]]
[[["    int n,m,cnt=0,Min=10000001,ara[1001],tmp;\n"], ["    int n,m,cnt=0,Min=10000,ara[1001],tmp;\n"]]]
[[[], ["\tcout << digsum(n);\n"]]]
[[["    long long p,t,k,i;\n"], ["    int p,t,k,i;\n"]]]
[[["    i=0;\n"], ["    i=1;\n"]]]
[[["    if(a&& n==5)printf(\"FAIL\\n\");\n"], ["    if(a)printf(\"FAIL\\n\");\n"]]]
[[["\t\tprintf(\"Group %c:\\n\", y);\n"], ["\t\tprintf(\"Group %c\\n\", y);\n"]]]
[[["long long a,b,x,y,ax,ay,co=1;\n"], ["int a,b,x,y,ax,ay,co=1;\n"]]]
[[["\t\tif (s[ans[n]]==&#39;1&#39; && d+ans[n]>0 && ans[n]!=ans[n-1] && dfs(n+1,-d-ans[n])) return true;\n"], ["\t\tif (s[ans[n]]==&#39;1&#39; && d+ans[n]>0 && dfs(n+1,-d-ans[n])) return true;\n"]]]
[[["  cout << 1ll*(n-2)*(n-2);\n"], ["  cout << (n-2)*(n-2);\n"]]]
[[["            cnt1=0;\n"], []]]
[[["    cout << min(k[i]*foo,100) << endl;\n"], ["    cout << k[i]*foo << endl;\n"]]]
[[["    cout << min(k[i]*foo,100) << endl;\n"], ["    cout << i*foo << endl;\n"]]]
[[["long long /* :||| */ a,d,c;\n"], ["int a,d,c;\n"]]]
[[["  cout << (cap < m ? -1 : cnt);\n"], ["  puts(\"-1\");\n"]]]
[[["    for (int i=2;i<80;i++){\n"], ["    for (int i=2;i<60;i++){\n"]]]
[[["        if (s.substr(i,3)==\"144\")\n"], ["        if (s.substr(i,3)==\"114\")\n"]]]
[[["const float eps=1e-2;\n"], ["const float eps=1e-7;\n"]]]
[[["const float eps=1e-2;\n"], ["const float eps=1e-3;\n"]]]
[[["  If W > 2 Then If odd(W) Then WriteLn(&#39;NO&#39;) Else WriteLn(&#39;YES&#39;) Else WriteLn(&#39;NO&#39;);\n"], ["  If odd(W) Then WriteLn(&#39;NO&#39;) Else WriteLn(&#39;YES&#39;);\n"]]]
[[["\tfor (auto i:p)\n"], ["\tfor (auto i:s)\n"]]]
[[["    __int64 sum = 0;\n"], ["    long int sum = 0;\n"]]]
[[["    for (int i = 0; i < n; i++)\n"], ["    for (int i = 1; i < n; i++)\n"]]]
[[["\tputs(((a==d) + (b==e) + (c==f))>0?\"YES\":\"NO\");\n"], ["\tputs(((a==d) + (b==e) + (c==f))>1?\"YES\":\"NO\");\n"]]]
[[["\t\t\tif (center!=0)\n"], ["\t\t\tif (i<center+1)\n"]]]
[[["    a[i] %= m;\n"], []]]
[[["\t\t\t\tma[make_pair(p2,p1)].push_back(m+1);\n"], ["\t\t\t\tma[make_pair(p1,p2)].push_back(m+1);\n"]]]
[[["\t\t\t(i==j)?cout << k<<\" \":cout << 0 << \" \";\n"], ["\t\t\t(i==j)?cout << k:cout << 0;\n"]]]
[[["\t\t\tif (sum[r][b]-sum[left-1][b]==y[b]) ans++;\n"], ["\t\t\tif (sum[r][y[b]]-sum[left-1][y[b]]==y[b]) ans++;\n"]]]
[[["\tprintf(\"Yes\\n\"); \n"], ["\tprintf(\"Yes\\n\");\n"]]]
[[["        printf(\"3\\n\");//printf(\"%d\\n\",m);\n"], ["        printf(\"3\\n\");printf(\"%d\\n\",m);\n"]]]
[[["\tfor (i = z - 100; i <= z; i++)\n"], ["\tfor (i = i - 100; i <= z; i++)\n"]]]
[[["\tfor (long i=1;i<20;i++)\n"], ["\tfor (long i=1;i<11;i++)\n"]]]
[[["  for (int i = 0; clock()*1.0/CLOCKS_PER_SEC < 0.5; i++) {\n"], ["  for (int i = 0; i < n*m; i++) {\n"]]]
[[["\tint n,k,t,maxmember=0;\n"], ["\tint n,k,t,maxmember;\n"]]]
[[["        if(masterLeft >= 0)\n"], ["        if(masterLeft > 0)\n"]]]
[[["        if(tmp1<=tmp)\n"], ["        if(tmp1<tmp)\n"]]]
[[["    else if(cnt1==1)printf(\"%d\",1);\n"], ["    if(cnt1==1)printf(\"%d\",1);\n"]]]
[[["long long r=1;\n"], ["long long r;\n"]]]
[[["\t\t\t\tans=min(ans,depth[p]+depth[q[b]]-2*depth[get_lca(p,q[b])]);\n"], ["\t\t\t\tans=min(ans,depth[p]+depth[q[b]]-depth[get_lca(p,q[b])]-1);\n"]]]
[[["\tcout << dist(v[1],v[0]) << \" \" << dist(v[n-1],v[0]) << endl;\n"], ["\tcout << dist(v[1],v[0]) << \" \" << dist(v[n],v[0]) << endl;\n"]]]
[[["    char s[300005];\n"], ["    char s[100001];\n"]]]
[[["const int maxn=4010;\n"], ["const int maxn=2010;\n"]]]
[[["    if(flg==1|| s.size()%n!=0)printf(\"NO\\n\");\n"], ["    if(flg==1)printf(\"NO\\n\");\n"]]]
[[["    printf (\"%d\", ans + 1);\n"], ["    printf (\"%d\", ans);\n"]]]
[[["    printf (\"%d\", ans + 1);\n"], ["    printf (\"%d\", sum);\n"]]]
[[["        if(s[1]==&#39;w&#39;)tmp+=b;\n"], ["        if(s[1]==&#39;w&#39;)t+=b;\n"]]]
[[["\tputs(f?\"Correct\":\"Too weak\");\n"], ["\tputs(f?\"Correct\":\"Too Weak\");\n"]]]
[[["    long int kq =  (-i + sqrt(delta))/ 2;\n"], ["    long int kq = truncl(x);\n"]]]
[[["    long int kq =  (-i + sqrt(delta))/ 2;\n"], ["    long int kq = roundl(x);\n"]]]
[[["\t\t\t\treturn cout << \"YES\",0;\n"], ["\t\t\t\treturn cout << \"YES\" << \" \" << b[i] << \" \" << b[j] << \" \" << b[k],0;\n"]]]
[[["\t\t\tif (abs(b[k]-b[i])<3 && abs(b[i]-b[j])<3 && abs(b[k]-b[j])<3)\n"], ["\t\t\tif (abs(b[k]-b[i])<3 && abs(b[i]-b[j]<3) && abs(b[k]-b[j]<3))\n"]]]
[[["\tk[b[1]]=20;\n"], []]]
[[["\td+=(t[g+x[i]][u+y[i]]==&#39;.&#39; || (g+x[i]==a && u+y[i]==b));\n"], ["\td+=(t[g+x[i]][u+y[i]]==&#39;.&#39;);\n"]]]
[[["    if(Max<=m)cnt=Max;\n"], []]]
[[["\t\t\t\tint v1=query1(wmt,l[p]);\n"], ["\t\t\t\tint v1=query1(wmt,p);\n"]]]
[[["\telse printf(\"%d\\n\",cnt);\n"], ["\tprintf(\"%d\\n\",cnt);\n"]]]
[[["    cout << \"Poor Inna and pony!\";\n"], ["    cout << \"Poor Inna and pony\";\n"]]]
[[["                if(ara[i][j]<m){cnt++;ara2[cnt-1]=i+1;break;}\n"], ["                if(ara[i][j]<m){cnt++;ara2[cnt-1]=i+1;break}\n"]]]
[[["                if(ara[i][j]<m){cnt++;ara2[cnt-1]=i+1;break;}\n"], ["                if(ara[i][j]<m){cnt++;ara2[cnt-1]=i+1;}\n"]]]
[[["        if(count==4 || count==7)printf(\"YES\");\n"], ["        if(count%4==0 || count%7==0)printf(\"YES\");\n"]]]
[[[], ["\t\tcout << \"n:  \" << n << endl << \"m:  \" << m << endl << \"price:  \" << price << endl;\n"]]]
[[["\tint m,n,a,b,mworth,price=0;\n"], ["\tfloat m,n,a,b,mworth,price=0;\n"]]]
[[["        else if((s[i]-&#39;0&#39;)<(s[len-1]-&#39;0&#39;)&& (s[i]-&#39;0&#39;)%2==0)\n"], ["        else if((s[i]-&#39;0&#39;)<(s[len-1]-0)&& (s[i]-&#39;0&#39;)%2==0)\n"]]]
[[["        else if((s[i]-&#39;0&#39;)<(s[len-1]-&#39;0&#39;)&& (s[i]-&#39;0&#39;)%2==0)\n"], ["        else if((s[i]-&#39;0&#39;)<(s[len-1]-0))\n"]]]
[[["        else if((s[i]-&#39;0&#39;)<(s[len-1]-&#39;0&#39;)&& (s[i]-&#39;0&#39;)%2==0)\n"], ["        else if((s[i]-&#39;0&#39;)>(s[len-1]-0))\n"]]]
[[["\t\t\t\tdays.insert(i);\n"], ["\t\t\t\tdays.insert(i+1);\n"]]]
[[["\t\t\t\t\tinc(f[a+1][b],(long long)f[a][b]*(cnt1-a-b)%mo);\n"], ["\t\t\t\t\tinc(f[a+1][b],(long long)f[a][b]*(n-a-b)%mo);\n"]]]
[[["//FRO;\n"], ["FRO;\n"]]]
[[["\t\tif (s[2]<=n) changetree(1,n,1,s[2],n,-1);\n"], ["\t\tif (s[2]<=n) changetree(1,n,1,s[2]+1,n,-1);\n"]]]
[[["        printf(\"%d\\n\",ara[n-1]+ara[n-1]);\n"], ["        printf(\"%d\\n\",ara[n-1]);\n"]]]
[[["\treturn pre[r]-pre[l-1]*mul(seed,r-l+1);\n"], ["\treturn pre[r]-pre[l-1]*mul(seed,r-l);\n"]]]
[[["            num[1]++;\n"], []]]
[[["    cout << max((int)ceil(((n*y)-100*x)/double(100)),0);    \n"], ["    cout << ceil(((n*y)-100*x)/double(100));    \n"]]]
[[["\t\t\tif (a*a!=n && check(n/a,n)) ans++;\n"], ["\t\t\tif (a*a!=n && check(n/a,a)) ans++;\n"]]]
[[["\t        Min=min(Min,sum-(now->ff)*(now->ss>2?3:2));\n"], ["\t        Min=sum-(now->ff)*(now->ss>2?3:2);\n"]]]
[[["        else if(i==4)Min=min(Min,ara[i]/4);\n"], []]]
[[["\t    for(i=0;i<n-2;i++)printf(\"2 \");\n"], ["\t    for(i=0;i<n-2;i++)printf(\"0 \");\n"]]]
[[["\tif (f<9||z==0){\n"], ["\tif (f<=9 || z==0){\n"]]]
[[["\tif (f<9||z==0){\n"], ["\tif (f<=9){\n"]]]
[[["\tif (f<9||z==0){\n"], ["\tif (f<9){\n"]]]
[[[], ["\tfreopen(\"in\",\"r\",stdin);\n"]]]
[[["\t\t\t\t\tf[b][z[a-1]&((1<<b)-1)]=min(f[b][z[a-1]&((1<<b)-1)],minv-nowl);\n"], ["\t\t\t\t\tf[b][z[a-1]&((1<<b)-1)]=min(f[b][z[a-1]*((1<<b)-1)],minv-nowl);\n"]]]
[[["int n,s,u,a,b,c,d,e,w=-10000000;\n"], ["int n,s,u,a,b,c,d,e,w;\n"]]]
[[["\tif (min(n,m)%2==0)cout<<\"Malvika\"; else cout <<\"Akshat\";\n"], ["\t(min(n,m)%2==0)?cout<<\"Malvika\":\"Akshat\";\n"]]]
[[["\tif (min(n,m)%2==0)cout<<\"Malvika\"; else cout <<\"Akshat\";\n"], ["\t(min(n,m)%2==0)?cout<<\"Malvika\":\"Akshat\";\n"]]]
[[["            if (i%2==j%2)\n"], ["            if (i%2==0 && j%2==0)\n"]]]
[[["\t\tif(i==&#39;1&#39;)t++;\n"], ["\t\tif(i==&#39;0&#39;)t++;\n"]]]
[[["\tif ((o==0 && s!=p) || p.size()!=s.size() || (s==\"1\" && s!=p) || (t==0 && o>0))\n"], ["\tif ((o==0 && t>0) || p.size()!=s.size() || (s==\"1\" && s!=p))\n"]]]
[[["\tif ((o==0 && s!=p) || p.size()!=s.size() || (s==\"1\" && s!=p) || (t==0 && o>0))\n"], ["\tif ((o==0 && t>0) || p.size()!=s.size() || (p==\"1\" && s!=p))\n"]]]
[[["\t\t\t\t\tbreak;\n"], []]]
[[["string s,p,M=\"AHIMOoTUVvWwXxY\";\n"], ["string s,p,M=\"AHIMmOoTUuVvWwXxY\";\n"]]]
[[["string s,p,M=\"AHIMOoTUVvWwXxY\";\n"], ["string s,p,M=\"AHIiMmOoTUuVvWwXxY\";\n"]]]
[[["\t\t\t\t\tif (depth[p1]-depth[p]<m) mp=getf(p2,depth[p2]-depth[p]-(m-depth[p1]+depth[p])),lca=p;\n"], ["\t\t\t\t\tif (depth[p1]-depth[p]<m) mp=getf(p2,depth[p2]-depth[p]-(m-depth[p1]-depth[p])),lca=p;\n"]]]
[[["\t\tlo = 1;\n"], ["\t\tlo = 0;\n"]]]
[[["    if (l<=b && l>=a)\n"], ["    if (l<=b)\n"]]]
[[["\t\tif (abs(m+1-2*pos)!=abs(m+1-2*a.pos)) return abs(m+1-2*pos)>abs(m+1-2*a.pos);\n"], ["\t\tif (abs(((m+1)>>1)-pos)!=abs(((m+1)>>1)-a.pos)) return abs(((m+1)>>1)-pos)>abs(((m+1)>>1)-a.pos);\n"]]]
[[["\t\treturn cout << 0,0;\n"], ["\t\treturn cout << 1,0;\n"]]]
[[["        for(j=m-1; j>=0; j--,k++)\n"], ["        for(j=0; j<m; j++,k++)\n"]]]
[[["    printf(\"%lld\\n\",move);\n"], ["    printf(\"%d\\n\",move);\n"]]]
[[["\t\t\t\t\t\t\tfor (int c=1;c<=(z[b]<<1);c++)\n"], ["\t\t\t\t\t\t\tfor (int c=1;c<=(z[a]<<1);c++)\n"]]]
[[["\tworms.push_back(0);\n"], []]]
[[[], ["            int ok = 1;\n"]], [["                int ok = 1;\n"], []]]
[[["\t    else {if(vec[i][1].ff==vec[i][2].ff)puts(\"?\");\n"], ["\t    else {if(vec[i][0].ff==vec[i][2].ff)puts(\"?\");\n"]]]
[[["\t    else {if(vec[i][1].ff==vec[i][2].ff)puts(\"?\");\n"], ["\t    else {if(vec[i][0].ff==vec[i][1].ff)puts(\"?\");\n"]]]
[[["\t    else {if(vec[i][1].ff==vec[i][2].ff)puts(\"?\");\n"], ["\t    else {if(vec[i][0].ff==vec[i][1].ff|| vec[i][1].ff==vec[i][2].ff)puts(\"?\");\n"]]]
[[["\tif (check3 == 1)\n"], ["\tif (check1 == 1)\n"]]]
[[["            break;\n"], []]]
[[["                if (i!=j&&n-i-1!=j&&n-j-1!=i)\n"], ["                if (i!=j&&n-i-1!=j&&n-j-1==i)\n"]]]
[[["        *x = *x / 5;\n"], ["        *x = *x / 3;\n"]]]
[[["\tint cnt=256;\n"], ["\tint cnt=&#39;.&#39;+1;\n"]]]
[[["\tif (x==y && y==z & z==0)\n"], ["\tif (x==y==z==0)\n"]]]
[[["            return 0;\n"], []]]
[[["int ara[10000001];\n"], ["int ara[101];\n"]]]
[[["\t\t\t\tif (y[p]+v<z[a]) return false;\n"], []]]
[[["int n,m,col[maxn],f[maxn][20],depth[maxn],en,fa[maxn],cnt,l[maxn],r[maxn],z1[maxn<<1],z2[maxn<<1],s[maxn],e[maxn];\n"], ["int n,m,col[maxn],f[maxn][20],depth[maxn],en,fa[maxn],cnt,l[maxn],r[maxn],z1[maxn],z2[maxn],s[maxn],e[maxn];\n"]]]
[[["      print *, \"FORTRAN 77\"\n"], ["      print *, \"FORTARN 77\"\n"]]]
[[["\t\t\t\t\tx++;\n"], []]]
[[["        if(n==5|| n==6)printf(\"53\\n\");\n"], ["        if(n<=2)printf(\"53\\n\");\n"]]]
[[["int dx[]={0,-1,1,0};\n"], ["int dx[]={0,1,1,0};\n"]]]
[[["\tfor (int i=1;i<20000;i++){\n"], ["\tfor (int i=1;i<10000;i++){\n"]]]
[[["    int a[1000001];\n"], ["    int a[10001];\n"]]]
[[["Var N, w, h, a, w0, h0 : int64;\n"], ["Var N, w, h, a, w0, h0 : longint;\n"]]]
[[["            a += b[i];\n"], ["            w += a[i];\n"]]]
[[["            ans=max(a+1, max(ans, a+j));\n"], ["            ans=max(ans, a+j);\n"]]]
[[["\tfor (int i=0;i<1001;i++)\n"], ["\tfor (int i=0;i<1000;i++)\n"]]]
[[["    if(need.empty())need=&#39;1&#39;;\n"], []]]
[[["            if(s[i]==&#39;a&#39;|| s[i]==&#39;e&#39;|| s[i]==&#39;i&#39;|| s[i]==&#39;o&#39;|| s[i]==&#39;u&#39;|| s[i]==&#39;A&#39;|| s[i]==&#39;E&#39;|| s[i]==&#39;I&#39;|| s[i]==&#39;O&#39;|| s[i]==&#39;U&#39;|| s[i]==&#39;y&#39;|| s[i]==&#39;Y&#39;);\n"], ["            if(s[i]==&#39;a&#39;|| s[i]==&#39;e&#39;|| s[i]==&#39;i&#39;|| s[i]==&#39;o&#39;|| s[i]==&#39;u&#39;|| s[i]==&#39;A&#39;|| s[i]==&#39;E&#39;|| s[i]==&#39;I&#39;|| s[i]==&#39;O&#39;|| s[i]==&#39;U&#39;);\n"]]]
[[["    bool is[n+1];\n"], ["    bool is[n];\n"]]]
[[["const int maxn=100001;\n"], ["const int maxn=10001;\n"]]]
[[[], ["\t\tif (n+m==0) ans++;\n"]]]
[[["\t\t\t\tif (a+nowp!=p2.p && a+nowp!=p3.p && (a==1 || a==p1.move_range || abs(a+nowp-p2.p)==1 || abs(a+nowp-p3.p)==1))\n"], ["\t\t\t\tif (a+nowp!=p2.p && a+nowp!=p3.p && (a==p1.move_range || abs(a+nowp-p2.p)==1 || abs(a+nowp-p3.p)==1))\n"]]]
[[["            else if(n==4)printf(\"forty\");\n"], ["            else if(n==4)printf(\"fourty\");\n"]]]
[[["char s[30005][21];\n"], ["char s[3005][21];\n"]]]
[[["    long int n, sum = 0;\n"], ["    long int n, sum = 1;\n"]]]
[[["    Max=max(cnt,Max);\n"], []]]
[[["            cur = 2;\n"], ["            cur = 0;\n"]]]
[[["    mark[a%m]=true,a=(a+a%m)%m;\n"], ["    mark[a]=true,a+=a%m;\n"]]]
[[["\t\tcout << swaps[i].first << \" \" << swaps[i].second << endl;\n"], ["\t\tcout << swaps[i].first << endl << swaps[i].second;\n"]]]
[[["  If (r =33333) or (r = 62401) Then WriteLn(r+1) Else WriteLn(r);\n"], ["  If r =33333 Then WriteLn(r+1) Else WriteLn(r);\n"]]]
[[["  If (r =33333) or (r = 62401) Then WriteLn(r+1) Else WriteLn(r);\n"], ["  WriteLn(r);\n"]]]
[[["        for(i=0;i<n-(n-m)-1;i++)printf(\"LEFT\\n\");\n"], ["        for(i=0;i<n-m-1;i++)printf(\"LEFT\\n\");\n"]]]
[[["        for(int j=0;j<n-i+1;j++){\n"], ["        for(int j=0;j<n-i;j++){\n"]]]
[[["const int maxn=1000001;\n"], ["const int maxn=100000;\n"]]]
[[["    printf (\"%d\", sum/3);\n"], ["    printf (\"%d\", sum/k);\n"]]]
[[["\t\t\treturn cout << a[k-c],0;\n"], ["\t\t\tcout << a[k-c];\n"]]]
[[["\tprintf(\"%lld %d\\n\",cnt,ans);\n"], ["\tprintf(\"%d %d\\n\",cnt,ans);\n"]]]
[[["    if(y>n)printf(\"-1\");\n"], ["    if(y>=n)printf(\"-1\");\n"]]]
[[["const int maxn=1000100;\n"], ["const int maxn=1000001;\n"]]]
[[["\tif (2*n-(i+2*j)<=4*c)\n"], []]]
[[["    a=1,b=1;\n"], ["    a=0,b=0;\n"]]]
[[["            if(((s[i]-&#39;0&#39;)*10+(s[j]-&#39;0&#39;))%8==0)\n"], ["            if((s[i]-&#39;0&#39;)*10+(s[j]-&#39;0&#39;)%8==0)\n"]]]
[[["        cout << -1;\n"], ["        cout << 0;\n"]]]
[[["\t    if(ara[i]-a>15)\n"], ["\t    if(ara[i]-a>=15)\n"]]]
[[["\t\tfor (j=0;j<=1000;j++)\n"], ["\t\tfor (j=0;j<=1e4;j++)\n"]]]
[[["    if((vis[1]|| vis[2]|| vis[3])&& (vis[7]|| vis[9]))hor=1;\n"], ["    if((vis[1]|| vis[2]|| vis[3])&& (vis[7]|| vis[8]|| vis[9]))hor=1;\n"]]]
[[["    if((vis[1]|| vis[2]|| vis[3])&& (vis[7]|| vis[9]))hor=1;\n"], ["    if((vis[1]|| vis[2]|| vis[3])&& (vis[7]|| vis[8]|| vis[9]))hor=1;\n"]]]
[[["    cout << a[n-k] << \" \" << a[n-k];\n"], ["    cout << a[k-1] << \" \" << a[k-1];\n"]]]
[[["\tO << s[(t[0]==&#39;f&#39;)^(p<\"2\")];\n"], ["\tO << s[(t[0]==&#39;f&#39;)^(p>\"1\")];\n"]]]
[[["\tO << s[(t[0]==&#39;f&#39;)^(p<\"2\")];\n"], ["\tO << s[(t[0]==&#39;f&#39;)^(p>\"0\")];\n"]]]
[]
[[["\t\tlong long res = 1\t;\n"], ["\t\tlong long res = base;\n"]]]
[[["\t\t\tbreak;\n"], []]]
[[["\t\t\t\tque[i]=addnum(req,tostr(rec[req]));\n"], ["\t\t\t\tque[i]=addnum(req,tostr(rec[req]+1));\n"]]]
[[["    cout<<min(min(2*(a+b),2*(b+c)),min((a+b+c),2*(a+c)));\n"], ["    cout<<min(2*(a+b),(a+b+c));\n"]]]
[[["    printf(\"%d\\n\",n);\n"], []]]
[[["\t#ifndef ONLINE_JUDGE\n"], ["\t#ifndef ONLINE_JDUGE\n"]]]
[[["    for(i=1;;i++)\n"], ["    for(i=1;i<=100001;i++)\n"]]]
[[["    for(i=1;i<=n;i++)if(ara[i]!=i){printf(\"%d\\n\",i);break;}\n"], ["    for(i=1;i<=n;i++)if(ara[i]!=i)printf(\"%d\\n\",i);\n"]]]
[[["\tif (cnt[1]!=cnt[2]+cnt[3] || cnt[1]!=cnt[4]+cnt[6] || cnt[4]>cnt[2])\n"], ["\tif (cnt[1]!=cnt[2]+cnt[3] || cnt[1]!=cnt[4]+cnt[6])\n"]]]
[[["    for(i=0;i<min;i++)dis2+=a[i];\n"], ["    for(i=0;i<=min;i++)dis2+=a[i];\n"]]]
[[["const int M = 2*100*10000;\n"], ["const int M = 2*100*1000;\n"]]]
[[["        if (a[i]<0)\n"], []]]
[[["\tsort(s.begin(),s.end());\n"], []]]
[[["    char s[1001][1001],s1[10001],s2[10001],c1,c2;\n"], ["    char s[101][101],s1[10001],s2[10001],c1,c2;\n"]]]
[[["        else if(abs(n)==8)printf(\"16\\n\");\n"], ["        else if(abs(n)==8)printf(\"10\\n\");\n"]]]
[[["int ks,n,m,x,y,mx=-1,X,Y,D[2005][2005];\n"], ["int ks,n,m,x,y,mx,X,Y,D[2005][2005];\n"]]]
[[["\t    if(i>=ara[0]*2)\n"], ["\t    if(i>ara[0]*2)\n"]]]
[[["        cout << -sum << \" \" << 0 << \" \" << 0 << \" \" << -sum;\n"], ["        cout << -sum << \" \" << 0 << \" \" << 0 << \" \" << sum;\n"]]]
[[["\t\t\tfoot=getcross(v,foot,m1,m2);\n"], ["\t\t\tpoint crossp=getcross(v,foot,m1,m2);\n"]]]
[[["    printf(\"%lld\\n\",ans);\n"], ["    printf(\"%d\\n\",ans);\n"]]]
[[["    for(int i = 0; i < 26; i++)\n"], ["    for(int i = 0; i < 25; i++)\n"]]]
[[["string s[]={\"Carrots\",\"Kiwis\",\"Grapes\"};\n"], ["string s[]={\"Carrots\",\"Kiwi\",\"Grapes\"};\n"]]]
[[["\tn=m;\n"], []]]
[[["long long n,d,a,b,sum,cnt;\n"], ["int n,d,a,b,sum,cnt;\n"]]]
[[["\t\tfor (int a=2;a<=l+1;a++)\n"], ["\t\tfor (int a=2;a<=l;a++)\n"]]]
[[["    printf(\"%d\",n);\n"], []]]
[[["\tfor (int c=a+1;true;c++)\n"], ["\tfor (int c=a;true;c++)\n"]]]
[[["int a,b,c,d1,d2,d3;\n"], []], [[], ["    int a,b,c,d1,d2,d3;\n"]]]
[[["\t\tcout << x1 << \" \" << (y1+dis(x2,x1)) << \" \" << x2 << \" \" <<  (y1+dis(x2,x1));\n"], ["\t\tcout << x1 << \" \" << (y1+dis(x2,x1)) << \" \" << x2 << (y1+dis(x2,x1));\n"]]]
[[["\tseg.back().second=n;\n"], []]]
[[["\tnowh=x;\n"], []]]
[[["int z[maxn],n;\n"], ["int z[maxn],n,;\n"]]]
[[["\tint Max=1,Min=n;\n"], ["\tint Max=0,Min=n;\n"]]]
[[["\tint Max=1,Min=n;\n"], ["\tint Max=0,Min=INF;\n"]]]
[[["    cout << fixed << ans*k;\n"], ["    cout << fixed << ans;\n"]]]
[[["long long hcnt,ans;\n"], ["int hcnt,ans;\n"]]]
[[["long long s,n,t=1,a[100005];\n"], ["int n,t=1,s,a[100005];\n"]]]
[[["    for(i=1000;i>=1;i--)\n"], ["    for(i=1;i<=1000;i++)\n"]]]
[[["\tfor (int i=n-1;i>=0;i--){\n"], ["\tfor (int i=n-1;i>0;i--){\n"]]]
[[["\tsort(c,c+4);\n"], ["\tsort(c,c+5);\n"]]]
[[["char t[55][55];\n"], ["string t[55];\n"]]]
[[["int que[4][maxn];\n"], ["int que[3][maxn];\n"]]]
[[["int que[4][maxn];\n"], ["int que[3][maxn];\n"]]]
[[["    {c=-1;\n"], ["    {c=0;\n"]]]
[[["\telse return gcd(b,a % b);\n"], ["\telse return a;\n"]]]
[[["\tcout << (m-n%m)*((n/m*(n/m-1))/2)+(n%m)*(((n/m)*(n/m+1))/2) << \" \" << ((n-m+1)*(n-m))/2;\n"], ["\tcout << (m-n%m)*((n/m*(n/m-1))/2)+(n%m)*((n/m*n/m+1)/2) << \" \" << ((n-m+1)*(n-m))/2;\n"]]]
[[["bool mark[N];\n"], []], [[], ["\tbool mark[n+1];\n"]]]
[[["}*v[maxn],ed[maxn*6];\n"], ["}*v[maxn],ed[maxn<<1];\n"]]]
[[["\tchar t[103][103];int c=1,n,m;\n"], ["\tchar t[101][101];int c=1,n,m;\n"]]]
[]
[[["\tfor (int i=0;i<10;i++) M[i+&#39;0&#39;] = i;\n"], ["\tfor (int i=0;i<9;i++) M[i+&#39;0&#39;] = i;\n"]]]
[[["    int ara[200005],ara1[200005];\n"], ["    int ara[100005],ara1[100005];\n"]]]
[[["    cout << ans+min(cur,1);\n"], ["    cout << max(1,ans);\n"]]]
[[["    cout << ans+min(cur,1);\n"], ["    cout << ans;\n"]]]
[[["N(E6);\n"], ["N(E5);\n"]]]
[[["\t\tswap(a[i],a[r-(i-l)]);\n"], ["\t\tswap(a[i],a[r-i+1]);\n"]]]
[[["\tios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);\n"], []]]
[[["\tcout << n-(s%n!=0);\t\n"], ["\tcout << n-(s%n>0);\t\n"]]]
[[["\tfor (int a=1;a<n;a++)\n"], ["\tfor (int a=1;a<=n;a++)\n"]]]
[[["\tlong long x1,y1,x2,y2,r;\n"], ["\tlong x1,y1,x2,y2,r;\n"]]]
[[["\tlong long x1,y1,x2,y2,r;\n"], ["\tint x1,y1,x2,y2,r;\n"]]]
[[["\tc=a+1;\n"], []]]
[[["\tfor (int i=1;i<=81;i++)\n"], ["\tfor (int i=1;i<=72;i++)\n"]]]
[[["        printf(\"YES\\n\");\n"], []]]
[[["            cout << tmp << endl;\n"], ["            cout << endl;\n"]]]
[[["const int maxn=510;\n"], ["const int maxn=110;\n"]]]
[[["\t\tif(input % 2 == 0 && input != 2){\n"], ["\t\tif(input % 2 == 0){\n"]]]
[[["\t\tcout << min(n,m)-i << \" \" << i << endl;\t\n"], ["\t\tcout << i << \" \" << i << endl;\t\n"]]]
[[["long long q[N],D[N][N],P[N][N],x[N],n;\n"], ["long q[N],D[N][N],P[N][N],x[N],n;\n"]]]
[[["\t\tif (s[i]==&#39;/&#39; && (s[i+1]==s[i] || (i==s.size()-1 && s.size()>1)))\n"], ["\t\tif (s[i]==&#39;/&#39; && s[i+1]==s[i])\n"]]]
[[["\tfor (int i=0;i<a.size()-1;i++)\n"], ["\tfor (int i=0;i<n-1;i++)\n"]]]
[[["            if(s[len-1]==&#39;.&#39;&& s[len-2]==&#39;a&#39;&& s[len-3]==&#39;l&#39;&& s[len-4]==&#39;a&#39;&& s[len-5]==&#39;l&#39;)flg1=1;\n"], ["            if(s[len-1]==&#39;.&#39;&& s[len-2]==&#39;a&#39;&& s[len-3]==&#39;l&#39;&& s[len-4]==&#39;a&#39;&& s[len-5]==&#39;l&#39;&& len>5)flg1=1;\n"]]]
[[["\t\tif (s[i]==&#39;1&#39;)\n"], ["\t\tif (s[i])\n"]]]
[[["\telse if((T-a)%d==0&& (T-a)%d>=0&& (T-a)/d>=0)printf(\"YES\\n\");\n"], ["\telse if((T-a)%d==0&& (T-a)%d>=0)printf(\"YES\\n\");\n"]]]
[[["    else if(n==4)printf(\"4\\n2 4 1 3\\n\");\n"], ["    else if(n==4)printf(\"3\\n1 4 2\\n\");\n"]]]
[[["        //printf(\"%d \",min(ara[a],ara[b]));\n"], ["        printf(\"%d \",min(ara[a],ara[b]));\n"]]]
[]
[[["                printf(\"O-|-OOOO\\n\");\n"], ["\n"]]]
[[["\tscanf(\"%s%s\",s1+1,s2+1);//\n"], ["\tscanf(\"%s%s\",s1+1,s2+1);\n"]]]
[[["\telse cout<<ceil((double)(b-a-8*n)/(12*(n-m)));\n"], ["\telse cout<<ceil((double)(b-a-8*n)/12*(n-m));\n"]]]
[[["\tif (n1>n2)\n"], ["\tif (n1>=n2)\n"]]]
[[["      if ((rcnt[i] + ccnt[j] - (t[i][j] == &#39;*&#39;)) == bcnt) {\n"], ["      if ((rcnt[i] + ccnt[j]) >= bcnt) {\n"]]]
[[["\telse cout<<s1;\n"], []]]
[[[], ["\t        s1.pb(&#39;a&#39;);\n"]], [["\telse cout<<s1;\n"], []]]
[[["    for(i=c;i<d;i++)if(ara[i]==0)cnt++;\n"], ["    for(i=c;i<=d;i++)if(ara[i]==0)cnt++;\n"]]]
[[["\t\tx[a]=(x[a-1]+y[a-1])%mo;\n"], ["\t\tx[a]=x[a-1]+y[a-1];\n"]]]
[[["\tfor (i = 1; i <= m; i++)\t{\n"], ["\tfor (i = 1; i <= n; i++)\t{\n"]]]
[[["\tif (ans % 5 == 0 && ans!=0)\n"], ["\tif (ans % 5 == 0)\n"]]]
[[["int n, i, h[500], dp[210][40010][4], mx, j, a, b, sum[500];\n"], ["int n, i, h[500], dp[110][40010][4], mx, j, a, b, sum[500];\n"]]]
[[["\t\tif (t>0)\n"], ["\t\tif (t>1)\n"]]]
[[["    sort(vec.begin(),vec.end());\n"], []]]
[[["\ts+=\"a\";\n"], ["\ts+=\"1\";\n"]]]
[[["        cout << n+1 << \" \";\n"], ["        cout << n << \" \";\n"]]]
[[["                        return cout << u+1 << \" \" << j+1 << \" \" << i+1 , 0;\n"], ["                        return cout << i+1 << \" \" << j+1 << \" \" << u+1 , 0;\n"]]]
[]
[[["    sieve((1<<20));\n"], ["    sieve(1e6+2);\n"]]]
[[["\t    printf(\"-1\\n\");\n"], ["\t    printf(\"0\\n\");\n"]]]
[[["\t\t\t\t\tans+=b[i-1]-b[i]+1;\n"], ["\t\t\t\t\tans+=b[i]-b[i-1]+1;\n"]]]
[[["    int n,Max=0,m,cnt=0,ara[1002]= {0};\n"], ["    int n,Max=0,m,cnt=0,ara[102]= {0};\n"]]]
[[["    for (int i=0;i<(1<<12);i++){\n"], ["    for (int i=0;i<(1<<9);i++){\n"]]]
[[["int n,mn=1e9;\n"], ["int n,mn=0x1E9;\n"]]]
[[["        if(n%2==1)printf(\"-1\");\n"], ["        if(n==1)printf(\"-1\");\n"]]]
[[["\t\tif (now1!=heavy_line[ve[now1].heavy].first) changetree(ve[now1].heavy,1,heavy_line[ve[now1].heavy].size-1,1,1,ve[now1].depth-ve[heavy_line[ve[now1].heavy].first].depth);\n"], ["\t\tif (now1!=heavy_line[ve[now1].heavy].first) changetree(ve[now1].heavy,1,heavy_line[ve[now1].heavy].size-1,1,1,ve[now1].depth-ve[heavy_line[ve[now1].heavy].first].depth+1);\n"]]]
[[["     cin >> a >> b;\n"], ["    cin >> a >> b;\n"]]]
[[["        else if(cnt>0&& cnt1<0)ans++;\n"], ["        //else if(cnt>0&& cnt1<0)ans++;\n"]]]
[[["    for (int i=fi;i<=la;i++){\n"], ["    for (int i=fi;i<la;i++){\n"]]]
[[["        cout<<sum-(ccnt*2)<<endl;\n"], ["        cout<<sum-(ccnt*2);\n"]]]
[[["\tif(m%2==0)cnt++;\n"], []]]
[[["        if(ara[i]*2>ara[i+1]&& ara[i]!=ara[i+1])\n"], ["        if(ara[i]*2>ara[i+1])\n"]]]
[[["\t\tcnt1[a]-=need;\n"], []], [[], ["\t\tcnt1[a]-=need;\n"]]]
[[["char s[500005];\n"], ["char s[105];\n"]]]
[[["const int maxn=3010;\n"], ["const int maxn=2010;\n"]]]
[[["\tupdate(rt);\n"], []]]
